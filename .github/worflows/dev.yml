name: CI

on:
  push:
    branches: [ "actions" ]
  pull_request:
    branches: [ "actions" ]

permissions:
  contents: read  # 이 설정은 워크플로우가 리포지토리의 콘텐츠를 읽을 수 있도록 허용합니다.


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: "corretto"
     
    - name: Build with Gradle
      run: |
            chmod +x ./airdnb/gradlew
            cd ./airdnb
            ./gradlew clean build -x test
    - name: Docker build & push to docker repo
      run: |
            echo ${{ secrets.CORI_DOCKER_TOKEN }} | docker login -u ${{ secrets.CORI_DOCKER_USERNAME }} --password-stdin
            cd ./airdnb
            docker build -f ./Dockerfile -t ${{ secrets.CORI_DOCKER_REPO }} .
            docker push ${{ secrets.CORI_DOCKER_REPO }}

  deploy:
    runs-on: ubuntu-latest
      needs: build
    
    steps:
    - name: Build with Gradle
      run: |
            chmod +x ./airdnb/gradlew
            cd ./airdnb
            ./gradlew clean build -x test
    - name: Docker build & push to docker repo
      run: |
            echo ${{ secrets.CORI_DOCKER_TOKEN }} | docker login -u ${{ secrets.CORI_DOCKER_USERNAME }} --password-stdin
            cd ./airdnb/
            docker build -f ./Dockerfile -t ${{ secrets.CORI_DOCKER_REPO }} .
            docker push ${{ secrets.CORI_DOCKER_REPO }}
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          sudo docker rm -f $(sudo docker ps -qa)
          sudo docker pull ${{ secrets.CORI_DOCKER_REPO }}
          sudo docker-compose up -d
          sudo docker image prune -f
